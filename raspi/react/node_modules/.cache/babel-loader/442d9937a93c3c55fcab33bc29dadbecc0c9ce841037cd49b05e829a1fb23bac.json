{"ast":null,"code":"var _jsxFileName = \"/home/will/piano/TravellingPianist/raspi/react/src/components/ControlButtons.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./ControlButtons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlButtons({\n  selected,\n  setSelected\n}) {\n  _s();\n  const [uploadstatus, setUploadstatus] = useState(\"False\");\n  const [uploadstyle, setUploadstyle] = useState(initialStyle);\n  const [playstatus, setPlaystatus] = useState(\"False\");\n  const [platstyle, setPlaystyle] = useState(initialStyle);\n  const [resetstatus, setResetstatus] = useState(\"False\");\n  const [resetstyle, setResetstyle] = useState(initialStyle);\n  const initialStyle = {\n    backgroundColor: \"grey\"\n  };\n  const trueStyle = {\n    backgroundColor: \"green\"\n  };\n  const falseStyle = {\n    backgroundColor: \"red\"\n  };\n  const fetchUpload = value => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"name\": value\n      })\n    };\n    fetch(\"http://127.0.0.1:5000/upload\", requestOptions).then(response => response.json()).then(json => {\n      // console.log(json.state);\n      setUploadstatus(json.state);\n    });\n  };\n  useEffect(() => {\n    if (uploadstatus === \"True\") {\n      setUploadstyle(trueStyle);\n    } else if (uploadstatus === \"False\") {\n      setUploadstyle(falseStyle);\n    } else {\n      setUploadstyle(initialStyle);\n    }\n  }, uploadstatus);\n  const fetchPlay = () => {\n    fetch(\"http://127.0.0.1:5000/play\").then(response => response.json()).then(json => {\n      // console.log(json.state);\n      setPlaystatus(json.state);\n    });\n  };\n  useEffect(() => {\n    if (playstatus === \"True\") {\n      setPlaystyle(trueStyle);\n    } else if (playstatus === \"False\") {\n      setPlaystyle(falseStyle);\n    } else {\n      setPlaystyle(initialStyle);\n    }\n  }, playstatus);\n  const handlePlay = () => {\n    if (uploadstatus === \"True\") {\n      fetchPlay();\n      setPlaystatus(\"True\");\n    } else {\n      setPlaystatus(\"False\");\n    }\n  };\n  const fetchReset = () => {\n    fetch(\"http://127.0.0.1:5000/reset\").then(response => response.json()).then(json => {\n      // console.log(json.state);\n      setResetstatus(json.state);\n      setSelected(\"\");\n    });\n  };\n  useEffect(() => {\n    if (resetstatus === \"True\") {\n      setResetstyle(trueStyle);\n    } else if (resetstatus === \"False\") {\n      setResetstyle(falseStyle);\n    } else {\n      setResetstyle(initialStyle);\n    }\n  }, resetstatus);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-item grid-item-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: () => fetchUpload(selected),\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-label\",\n        style: statusstyle,\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-upload\",\n        children: uploadstatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-button\",\n        onClick: () => handlePlay(),\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-label\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"play-upload\",\n        children: playstatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: () => fetchReset(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-label\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-reset\",\n        children: resetstatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(ControlButtons, \"BmcoAmxyUGC6Xz7lUkxqHaem5mM=\");\n_c = ControlButtons;\nvar _c;\n$RefreshReg$(_c, \"ControlButtons\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","ControlButtons","selected","setSelected","_s","uploadstatus","setUploadstatus","uploadstyle","setUploadstyle","initialStyle","playstatus","setPlaystatus","platstyle","setPlaystyle","resetstatus","setResetstatus","resetstyle","setResetstyle","backgroundColor","trueStyle","falseStyle","fetchUpload","value","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","state","fetchPlay","handlePlay","fetchReset","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","statusstyle","_c","$RefreshReg$"],"sources":["/home/will/piano/TravellingPianist/raspi/react/src/components/ControlButtons.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./ControlButtons.css\";\n\nexport default function ControlButtons({selected, setSelected}) {\n\n    const [uploadstatus, setUploadstatus] = useState(\"False\");\n    const [uploadstyle, setUploadstyle] = useState(initialStyle);\n    const [playstatus, setPlaystatus] = useState(\"False\");\n    const [platstyle, setPlaystyle] = useState(initialStyle);\n    const [resetstatus, setResetstatus] = useState(\"False\");\n    const [resetstyle, setResetstyle] = useState(initialStyle);\n\n\n    const initialStyle = {\n        backgroundColor: \"grey\",\n    };\n\n    const trueStyle = {\n        backgroundColor: \"green\",\n    };\n\n    const falseStyle = {\n        backgroundColor: \"red\",\n    };\n\n\n    const fetchUpload = (value) => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"name\": value})\n        }; \n    \n    \n        fetch(\"http://127.0.0.1:5000/upload\", requestOptions)\n        .then((response) => response.json())\n        .then((json) => {\n            // console.log(json.state);\n            setUploadstatus(json.state);\n        });\n    }\n    useEffect( () => {\n        if (uploadstatus === \"True\") {\n            setUploadstyle(trueStyle);\n        } else if (uploadstatus === \"False\") {\n            setUploadstyle(falseStyle);\n        } else {\n            setUploadstyle(initialStyle);\n        }\n    }, uploadstatus);\n\n    \n    const fetchPlay = () => {\n        fetch(\"http://127.0.0.1:5000/play\")\n        .then((response) => response.json())\n        .then((json) => {\n            // console.log(json.state);\n            setPlaystatus(json.state);\n        });\n    }\n    useEffect( () => {\n        if (playstatus === \"True\") {\n            setPlaystyle(trueStyle);\n        } else if (playstatus === \"False\") {\n            setPlaystyle(falseStyle);\n        } else {\n            setPlaystyle(initialStyle);\n        }\n    }, playstatus);\n\n    const handlePlay = () => {\n        if (uploadstatus === \"True\") {\n            fetchPlay();\n            setPlaystatus(\"True\");\n        } else {\n            setPlaystatus(\"False\")\n        }\n    }\n\n\n    const fetchReset = () => {\n        fetch(\"http://127.0.0.1:5000/reset\")\n        .then((response) => response.json())\n        .then((json) => {\n            // console.log(json.state);\n            setResetstatus(json.state);\n            setSelected(\"\");\n        });\n    }\n    useEffect( () => {\n        if (resetstatus === \"True\") {\n            setResetstyle(trueStyle);\n        } else if (resetstatus === \"False\") {\n            setResetstyle(falseStyle);\n        } else {\n            setResetstyle(initialStyle);\n        }\n    }, resetstatus);\n    \n\n    return (\n        <div className=\"grid-item grid-item-4\">\n            <div className=\"upload-container\">\n                <button className=\"upload-button\" onClick={() => fetchUpload(selected)}>Upload</button>\n                <div className=\"status-label\" style={statusstyle}>Status</div>\n                <div className=\"status-upload\">{uploadstatus}</div>\n            </div>\n            <div className=\"play-container\">\n                <button className=\"play-button\" onClick={() => handlePlay()}>Play</button>\n                <div className=\"status-label\">Status</div>\n                <div className=\"play-upload\">{playstatus}</div>\n            </div>\n            <div className=\"reset-container\">\n                <button className=\"reset-button\" onClick={() => fetchReset()}>Reset</button>\n                <div className=\"status-label\">Status</div>\n                <div className=\"status-reset\">{resetstatus}</div>\n            </div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}