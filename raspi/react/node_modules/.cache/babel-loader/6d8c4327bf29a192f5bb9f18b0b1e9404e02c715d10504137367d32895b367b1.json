{"ast":null,"code":"var _jsxFileName = \"/home/will/PIANO/TravellingPianist/raspi/user-interface/src/Iframe.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Iframe({\n  url\n}) {\n  customElements.define('x-frame-bypass', class extends HTMLIFrameElement {\n    static get observedAttributes() {\n      return ['src'];\n    }\n    constructor() {\n      super();\n    }\n    attributeChangedCallback() {\n      this.load(this.src);\n    }\n    connectedCallback() {\n      this.sandbox = '' + this.sandbox || 'allow-forms allow-modals allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-presentation allow-same-origin allow-scripts allow-top-navigation-by-user-activation'; // all except allow-top-navigation\n    }\n    load(url, options) {\n      if (!url || !url.startsWith('http')) throw new Error(`X-Frame-Bypass src ${url} does not start with http(s)://`);\n      console.log('X-Frame-Bypass loading:', url);\n      this.srcdoc = `<html>\n        <head>\n            <style>\n            .loader {\n                position: absolute;\n                top: calc(50% - 25px);\n                left: calc(50% - 25px);\n                width: 50px;\n                height: 50px;\n                background-color: #333;\n                border-radius: 50%;  \n                animation: loader 1s infinite ease-in-out;\n            }\n            @keyframes loader {\n                0% {\n                transform: scale(0);\n                }\n                100% {\n                transform: scale(1);\n                opacity: 0;\n                }\n            }\n            </style>\n        </head>\n        <body>\n            <div class=\"loader\"></div>\n        </body>\n        </html>`;\n      this.fetchProxy(url, options, 0).then(res => res.text()).then(data => {\n        if (data) this.srcdoc = data.replace(/<head([^>]*)>/i, `<head$1>\n            <base href=\"${url}\">\n            <script>\n            // X-Frame-Bypass navigation event handlers\n            document.addEventListener('click', e => {\n                if (frameElement && document.activeElement && document.activeElement.href) {\n                    e.preventDefault()\n                    frameElement.load(document.activeElement.href)\n                }\n            })\n            document.addEventListener('submit', e => {\n                if (frameElement && document.activeElement && document.activeElement.form && document.activeElement.form.action) {\n                    e.preventDefault()\n                    if (document.activeElement.form.method === 'post')\n                        frameElement.load(document.activeElement.form.action, {method: 'post', body: new FormData(document.activeElement.form)})\n                    else\n                        frameElement.load(document.activeElement.form.action + '?' + new URLSearchParams(new FormData(document.activeElement.form)))\n                }\n            })\n            </script>`);\n      }).catch(e => console.error('Cannot load X-Frame-Bypass:', e));\n    }\n    fetchProxy(url, options, i) {\n      const proxies = (options || {}).proxies || ['https://cors-anywhere.herokuapp.com/', 'https://yacdn.org/proxy/', 'https://api.codetabs.com/v1/proxy/?quest='];\n      return fetch(proxies[i] + url, options).then(res => {\n        if (!res.ok) throw new Error(`${res.status} ${res.statusText}`);\n        return res;\n      }).catch(error => {\n        if (i === proxies.length - 1) throw error;\n        return this.fetchProxy(url, options, i + 1);\n      });\n    }\n  }, {\n    extends: 'iframe'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_c = Iframe;\nvar _c;\n$RefreshReg$(_c, \"Iframe\");","map":{"version":3,"names":["Iframe","url","customElements","define","HTMLIFrameElement","observedAttributes","constructor","attributeChangedCallback","load","src","connectedCallback","sandbox","options","startsWith","Error","console","log","srcdoc","fetchProxy","then","res","text","data","replace","catch","e","error","i","proxies","fetch","ok","status","statusText","length","extends","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/will/PIANO/TravellingPianist/raspi/user-interface/src/Iframe.js"],"sourcesContent":["\n\nexport default function Iframe({url}) {\n\n    \n    customElements.define('x-frame-bypass', class extends HTMLIFrameElement {\n        static get observedAttributes() {\n            return ['src']\n        }\n        constructor () {\n            super()\n        }\n        attributeChangedCallback () {\n            this.load(this.src)\n        }\n        connectedCallback () {\n            this.sandbox = '' + this.sandbox || 'allow-forms allow-modals allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-presentation allow-same-origin allow-scripts allow-top-navigation-by-user-activation' // all except allow-top-navigation\n        }\n        load (url, options) {\n            if (!url || !url.startsWith('http'))\n                throw new Error(`X-Frame-Bypass src ${url} does not start with http(s)://`)\n            console.log('X-Frame-Bypass loading:', url)\n            this.srcdoc = `<html>\n        <head>\n            <style>\n            .loader {\n                position: absolute;\n                top: calc(50% - 25px);\n                left: calc(50% - 25px);\n                width: 50px;\n                height: 50px;\n                background-color: #333;\n                border-radius: 50%;  \n                animation: loader 1s infinite ease-in-out;\n            }\n            @keyframes loader {\n                0% {\n                transform: scale(0);\n                }\n                100% {\n                transform: scale(1);\n                opacity: 0;\n                }\n            }\n            </style>\n        </head>\n        <body>\n            <div class=\"loader\"></div>\n        </body>\n        </html>`\n                this.fetchProxy(url, options, 0).then(res => res.text()).then(data => {\n                    if (data)\n                        this.srcdoc = data.replace(/<head([^>]*)>/i, `<head$1>\n            <base href=\"${url}\">\n            <script>\n            // X-Frame-Bypass navigation event handlers\n            document.addEventListener('click', e => {\n                if (frameElement && document.activeElement && document.activeElement.href) {\n                    e.preventDefault()\n                    frameElement.load(document.activeElement.href)\n                }\n            })\n            document.addEventListener('submit', e => {\n                if (frameElement && document.activeElement && document.activeElement.form && document.activeElement.form.action) {\n                    e.preventDefault()\n                    if (document.activeElement.form.method === 'post')\n                        frameElement.load(document.activeElement.form.action, {method: 'post', body: new FormData(document.activeElement.form)})\n                    else\n                        frameElement.load(document.activeElement.form.action + '?' + new URLSearchParams(new FormData(document.activeElement.form)))\n                }\n            })\n            </script>`)\n                }).catch(e => console.error('Cannot load X-Frame-Bypass:', e))\n            }\n            fetchProxy (url, options, i) {\n                const proxies = (options || {}).proxies || [\n                    'https://cors-anywhere.herokuapp.com/',\n                    'https://yacdn.org/proxy/',\n                    'https://api.codetabs.com/v1/proxy/?quest='\n                ]\n                return fetch(proxies[i] + url, options).then(res => {\n                    if (!res.ok)\n                        throw new Error(`${res.status} ${res.statusText}`);\n                    return res\n                }).catch(error => {\n                    if (i === proxies.length - 1)\n                        throw error\n                    return this.fetchProxy(url, options, i + 1)\n                })\n            }\n        }, {extends: 'iframe'})\n\n\n    return (\n        <div></div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}